@model IEnumerable<Animals.Models.StaffMember>
@using Microsoft.AspNetCore.Identity
@inject SignInManager<IdentityUser> SignInManager

@{
    ViewData["Title"] = "Index";
}

<style>

    /* This is the Table colour Css*/
    table {
        background-color: #e68317;
    }

    /* This is the search button Css*/
    .Search {
        box-sizing: border-box;
        -webkit-appearance: none;
        -moz-appearance: none;
        background-color: #ffa400;
        border: 2px solid #e74c3c;
        border-radius: 0.6em;
        color: #000000;
        cursor: pointer;
        display: -webkit-box;
        display: -webkit-flex;
        display: -ms-flexbox;
        display: flex;
        -ms-flex-item-align: center;
        align-self: center;
        font-size: 1rem;
        font-weight: 400;
        line-height: 1;
        margin: 20px;
        padding: 1.2em 2.8em;
        text-decoration: none;
        text-align: center;
        text-transform: uppercase;
        font-family: 'Montserrat', sans-serif;
        font-weight: 700;
    }

        .Search:hover, .btn:focus {
            color: #fff;
            outline: 0;
        }



        .Search:hover {
            box-shadow: 0 0 10px 0 #3498db inset, 0 0 10px 4px #3498db;
            color: white;
            background-color: orangered;
        }
</style>

<h1>Staff Members</h1>

@if (SignInManager.IsSignedIn(User))
{
    <p>
        <a asp-action="Create">Create New</a>
    </p>
}


<form asp-controller="Foods" asp-action="Index">
    <p>
        Foods <input type="text" name="searchTerm" />
        @*<input type="submit" value="Search"/>*@
        <button type="submit" class="btn Search">Search</button>
    </p>
</form>

<table class="table">
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.FirstName)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.LastName)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Age)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.EnclosureWorkingAt)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Sex)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Roles)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.DateEmployed)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.PhoneNum)
            </th>
            <th></th>
        </tr>
    </thead>


    @if (Model.Count() == 0)
    {
        <tr class="alert-danger">
            <td colspan="9">No Records found</td>
        </tr>
    }

    <tbody>
        @foreach (var item in Model)
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.FirstName)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.LastName)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Age)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.EnclosureWorkingAt)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Sex)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Roles)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.DateEmployed)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.PhoneNum)
                </td>
                <td>
                    <a asp-action="Edit" asp-route-id="@item.StaffMemberID">Edit</a> |
                    <a asp-action="Details" asp-route-id="@item.StaffMemberID">Details</a> |
                    <a asp-action="Delete" asp-route-id="@item.StaffMemberID">Delete</a>
                </td>
            </tr>
        }
    </tbody>
</table>
